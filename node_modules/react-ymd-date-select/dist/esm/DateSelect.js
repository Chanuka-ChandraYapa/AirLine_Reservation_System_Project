var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React from "react";
import { useDateSelect } from "./use-date-select";
// eslint-disable-next-line @typescript-eslint/no-explicit-any
const DateSelect = React.forwardRef((props, ref) => {
    // Ref is forwarded, but it is intended to be used with react-hook-form's <Controller /> to focus the input when error occurs.
    // This component is still controlled even if ref is here.
    const { onChange, value } = props, opts = __rest(props, ["onChange", "value"]);
    const dateSelectProps = useDateSelect(value, onChange, opts);
    return props.render(Object.assign(Object.assign({}, dateSelectProps), { ref }));
});
DateSelect.displayName = "DateSelect";
export default DateSelect;
